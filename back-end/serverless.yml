service: hey-bevan

custom:
  tableName: 'hey-bevan-table-${self:provider.stage}'
  customDomain:
    domainName: "hey-bevan.com"
    certificateArn: arn:aws:acm:us-east-1:038405731550:certificate/29abc4e1-433f-4440-ba0e-3d03b1e0ad8c
    basePath: ''
    stage: ${self:provider.stage}
    createRoute53Record: true

provider:
  name: aws
  runtime: dotnetcore2.1
  region: ap-southeast-2


# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
#        - dynamodb:DescribeTable
#        - dynamodb:Query
#        - dynamodb:Scan
#        - dynamodb:GetItem
#        - dynamodb:BatchGetItem
#        - dynamodb:PutItem
#        - dynamodb:UpdateItem
#        - dynamodb:DeleteItem
      Resource:
#        - arn:aws:dynamodb:ap-southeast-2:038405731550:table/hey-bevan-table-dev
        - { "Fn::GetAtt": ["HeyBevanTable", "Arn" ] }
environment:
  USERS_TABLE: ${self:custom.tableName}


# you can define service wide environment variables here
#  environment:
#    variable1: value1

package:
  individually: true

functions:
  addBevan:
    handler: CsharpHandlers::AwsDotnetCsharp.Handler::AddBevan
    description: add bevan
    events:
      - http:
          path: addBevan
          method: post
    package:
      artifact: bin/release/netcoreapp2.1/AddBevan.zip
  challenge:
    handler: CsharpHandlers::AwsDotnetCsharp.Handler::Challenge
    description: challenge auth
    events:
      - http:
          path: challenge
          method: post
    package:
      artifact: bin/release/netcoreapp2.1/Challenge.zip
  GetAll:
    handler: CsharpHandlers::AwsDotnetCsharp.Handler::GetAll
    description: get all bevans
    events:
      - http:
          path: getAll
          method: get
    package:
      artifact: bin/release/netcoreapp2.1/GetAll.zip
  GetById:
    handler: CsharpHandlers::AwsDotnetCsharp.Handler::GetById
    description: get bevan by id
    events:
      - http:
          path: getById
          method: get
    package:
      artifact: bin/release/netcoreapp2.1/GetById.zip
  showSent:
    handler: CsharpHandlers::AwsDotnetCsharp.Handler::ShowSent
    memorySize: 128
    description: Show sent Bevans
    events:
      - http:
          path: showSent
          method: post
    package:
      artifact: bin/release/netcoreapp2.1/ShowSent.zip
  showGiven:
    handler: CsharpHandlers::AwsDotnetCsharp.Handler::ShowGiven
    memorySize: 128
    description: Show given Bevans
    events:
      - http:
          path: showGiven
          method: post
    package:
      artifact: bin/release/netcoreapp2.1/ShowGiven.zip
    
    
resources:
 Resources:
    HeyBevanTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:custom.tableName}
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
